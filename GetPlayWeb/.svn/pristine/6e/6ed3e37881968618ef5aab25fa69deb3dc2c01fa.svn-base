/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pt.uc.dei.aor.projeto3.grupod.managedBeans;


import java.io.File;
import java.io.IOException;
import java.io.Serializable;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.SessionScoped;
import javax.mail.MessagingException;
import javax.servlet.http.Part;
import pt.uc.dei.aor.projeto3.grupod.ejb.CreateMusicSessionBean;
import pt.uc.dei.aor.projeto3.grupod.ejb.MusicSessionBean;
import pt.uc.dei.aor.projeto3.grupod.entities.Music;

/**
 *
 * @author brunocosta
 */
@ManagedBean
@SessionScoped
public class CreateMusicManagedBean implements Serializable {

    @EJB
    private CreateMusicSessionBean createMusicB;
    
    @EJB
    private MusicSessionBean musicB;
    
    @ManagedProperty(value = "#{logedUserManagedBean}")
    private LogedUserManagedBean logedUserMB;
    
    private Music music;
    private Part file;
    
    public CreateMusicManagedBean() {
        this.music = new Music();
    }
    

    public Music getMusic() {
        return music;
    }

    public void setMusic(Music music) {
        this.music = music;
    }
    
    public LogedUserManagedBean getLogedUserMB() {
        return logedUserMB;
    }

    public void setLogedUserMB(LogedUserManagedBean logedUserMB) {
        this.logedUserMB = logedUserMB;
    }

    public CreateMusicSessionBean getCreateMusicB() {
        return createMusicB;
    }

    public void setCreateMusicB(CreateMusicSessionBean createMusicB) {
        this.createMusicB = createMusicB;
    }

    public MusicSessionBean getMusicB() {
        return musicB;
    }

    public void setMusicB(MusicSessionBean musicB) {
        this.musicB = musicB;
    }

    public Part getFile() {
        return file;
    }

    public void setFile(Part file) {
        this.file = file;
    }

    

    
    
//    public void validateFile(FacesContext ctx,
//            UIComponent comp,
//            Object value) throws MessagingException {
//        List<FacesMessage> msgs = new ArrayList<FacesMessage>();
//        if (file != null) {
//            if (file.getSize == 0) {
//                msgs.add(new FacesMessage("You didn't choose a file"));
//            }
//            if (file.getSize() > 1024) {
//                msgs.add(new FacesMessage("file too big"));
//            }
//            if (!"audio/mpeg".equals(file.getContentType())) {
//                msgs.add(new FacesMessage("not a text file"));
//            }
//            if (!msgs.isEmpty()) {
//                throw new ValidatorException(msgs);
//            }
//        }
//    }

    public String newMusic() throws MessagingException, IOException {
        
        createMusicB.upload(file);
       
        Music newMusic = createMusicB.newMusic(this.music, this.logedUserMB.getUserLoged());
        if (newMusic != null) {
            return "mainWindow";
        } 
        else {
            return "newMusic";
        }
        
        

    }

}
