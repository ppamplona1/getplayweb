/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pt.uc.dei.aor.projeto3.grupod.ejb;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Scanner;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.faces.bean.ManagedProperty;
import javax.mail.MessagingException;
import javax.servlet.http.Part;
import pt.uc.dei.aor.projeto3.grupod.entities.Music;
import pt.uc.dei.aor.projeto3.grupod.entities.UserPlay;
import pt.uc.dei.aor.projeto3.grupod.facades.MusicFacade;
import pt.uc.dei.aor.projeto3.grupod.managedBeans.CreateMusicManagedBean;

/**
 *
 * @author User
 */
@Stateless
public class CreateMusicSessionBean {

    // Add business logic below. (Right-click in editor and choose
    // "Insert Code > Add Business Method")
    @EJB
    private MusicFacade mf;
    
    @ManagedProperty(value = "#{CreateMusicManagedBean}")
    private CreateMusicManagedBean createMusicMB;
    
    
    private String path;

    public MusicFacade getMf() {
        return mf;
    }

    public void setMf(MusicFacade mf) {
        this.mf = mf;
    }

    public CreateMusicManagedBean getCreateMusicMB() {
        return createMusicMB;
    }

    public void setCreateMusicMB(CreateMusicManagedBean createMusicMB) {
        this.createMusicMB = createMusicMB;
    }

    

    public String getPath() {
        return path;
    }

    public void setPath(String path) {
        this.path = path;
    }
    
    public Music newMusic(Music m, UserPlay u){
        System.out.println(m.getPath());
        m.setUser(u);
        try {
            mf.create(m);
            return m;

        } 
        catch (Exception e) {
            return null;

        }
    }
    
    public String upload(Part file){
//        try (InputStream inputStream = file.getInputStream(); 
//                FileOutputStream outputStream = new FileOutputStream(file.getName())) {
//            
//            byte[] buffer = new byte[10270080];
//            int bytesRead = 0;
//            while(true) {
//                bytesRead = inputStream.read(buffer);
//                if(bytesRead > 0) {
//                    outputStream.write(buffer, 0, bytesRead);
//                }else {
//                    break;
//                }
//            }
//        } 
        
        try {

            path = new Scanner(file.getInputStream())
            .useDelimiter("\\A").next();

        } catch (IOException e){
            path="";
        }
        return path;
    }
}
