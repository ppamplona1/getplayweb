/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pt.uc.dei.aor.projeto3.grupod.managedBeans;

import java.io.Serializable;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.SessionScoped;
import pt.uc.dei.aor.projeto3.grupod.ejb.LogedUserSessionBean;
import pt.uc.dei.aor.projeto3.grupod.entities.UserPlay;
import pt.uc.dei.aor.projeto3.grupod.facades.UserPlayFacade;
import pt.uc.dei.aor.projeto3.grupod.outros.EncriptarMD5;



/**
 *
 * @author brunocosta
 */
@ManagedBean
@SessionScoped
public class RegistrationManagedBean implements Serializable {
    
    @EJB
    private UserPlayFacade userFacade;
    
    @ManagedProperty(value = "#{logedUserSessionBean}")
    private LogedUserSessionBean lusb;
    
    private UserPlay user;
    
    private String newUserPassword2;
    
    private String emailExists = "";
    private String passwordMatch = "";
    
    public RegistrationManagedBean() {
        this.user = new UserPlay();
    }

    public UserPlay getUser() {
        return user;
    }

    public void setUser(UserPlay user) {
        this.user = user;
    }
    
    public String getNewUserPassword2() {
        return newUserPassword2;
    }

    public void setNewUserPassword2(String newUserPassword2) {
        this.newUserPassword2 = newUserPassword2;
    }

    public LogedUserSessionBean getLusb() {
        return lusb;
    }

    public void setLusb(LogedUserSessionBean lusb) {
        this.lusb = lusb;
    }

    
    public String getEmailExists() {
        return emailExists;
    }

    public void setEmailExists(String emailExists) {
        this.emailExists = emailExists;
    }

    public String getPasswordMatch() {
        return passwordMatch;
    }

    public void setPasswordMatch(String passwordMatch) {
        this.passwordMatch = passwordMatch;
    }
    
    public String newUser() {
        
        if(user.getPassword().equals(newUserPassword2)){
            
            String pass = EncriptarMD5.cryptWithMD5(newUserPassword2);
            user.setPassword(pass);
            try{
                userFacade.create(user);
                lusb.setLogedUser(user);
            
                return "mainWindow";
            }
            catch(Exception e){
                this.emailExists = "E-mail not available";
                return "newUser";
            }
        }
        else{
           this.passwordMatch = "The passwords doesn't match";
           return "newUser"; 
        }
        
    }
    
    
}
